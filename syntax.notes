-----------------------------------------------------------
    Types
-----------------------------------------------------------
- XML declaration
- References
- tags & elements
- attributes
- text


-----------------------------------------------------------
    Declaration
-----------------------------------------------------------
- first line of document must have XML declaration
- declares the version of the XML
- optionally declares encoding
	eg. encoding="UTF-8"
	- will be overwritten by HTTP protocol
<?xml version="1.0"?>

-----------------------------------------------------------
    Elements and closing tags
-----------------------------------------------------------
- there is only 1 root tag
	- all other elements must be nested in this element
- all elements must have closing tags
- all new elements before an element is closed are children of that element
	- all children must be closed before their parent and siblings
- can have empty tag
	- no content
	- optionally can omit opening tag
	<name attribute />
	<name attribute></name>
- tag names are case sensitive
	- name can include {-, _, .} as punctuation
<root>
	<child>
		<subchild>
		</subchild>
	</child>
</root>

-----------------------------------------------------------
    Attributes
-----------------------------------------------------------
- elements can have attributes in name/value pairs
- attributes provide additional information about elements
- they are always contained in the start tag of the element
- information in attributes can be expressed as child elements
	- sequence of information can only be expressed as child elements
	- generally avoid using attributes if the information is important to the reader
- name is never quoted
- value must be quoted
<note date="12/11/99">

-----------------------------------------------------------
    References
-----------------------------------------------------------
- adds additional text or markup
- begin with &
- end with ;
- 2 types
	- entity reference
		- name between start and end delimiters
		eg. &amp;
	- character reference
		- hash mark followed by a number for unicode code of a character
		eg. &#65;

-----------------------------------------------------------
    Text
-----------------------------------------------------------
- save as UTF-8 or UTF-16 to avoid encoding issues
	- specify in declaration as encoding attribute
	- UTF-8 is default
- whitespace between elements and attributes are ignored
- reserved characters and their reference replacements
	< (&lt;)
	> (&gt;)
	& (&amp;)
	' (&apos;)
	" (&quot;)